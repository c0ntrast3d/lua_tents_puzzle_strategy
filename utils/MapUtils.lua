---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by c0ntrast3d.
--- DateTime: 2019-06-17 14:51
---
local NumberUtils = require('utils.NumberUtils')

local M = {}

M.getMapDimension = function(decodedJson)
    return assert(decodedJson['dimension'], 'Map dimension not specified!')
end

local getMapHeight = function(decodedJson)
    return assert(#decodedJson['map'], 'Map not specified!')
end

M.getTopHints = function(decodedJson, mapDimension)
    local hints = assert(decodedJson['topHints'], 'Top Hints not specified!')
    for _, v in ipairs(hints) do
        assert(NumberUtils.isInt(v) and NumberUtils.isBetween(v, 0, mapDimension))
    end
    return #hints == mapDimension and hints or error('Top hints length should be same as map dimension')
end

M.getLeftHints = function(decodedJson, mapDimension)
    local hints = assert(decodedJson['leftHints'], 'Left Hints not specified!')
    for _, v in ipairs(hints) do
        assert(NumberUtils.isInt(v) and NumberUtils.isBetween(v, 0, mapDimension))
    end
    return #hints == mapDimension and hints or error('Left hints length should be same as map dimension')
end

M.getMap = function(decodedJson, mapDimension)
    local mapHeight = getMapHeight(decodedJson)
    -- check whether the map dimension is correct
    assert(mapDimension == mapHeight,
            string.format('Invalid map height :: found %d | should be %d',
                    mapHeight,
                    mapDimension)
    )
    local map = {}
    for i = 1, mapDimension do
        -- check whether map is squared
        assert(#decodedJson['map'][i] == mapDimension, 'Map width and height should be the same!')
        local mapLine = {}
        for j = 1, #decodedJson['map'][i] do
            local currentValue = decodedJson['map'][i][j]
            assert(NumberUtils.isInt(currentValue) and NumberUtils.isBinary(currentValue))
            table.insert(mapLine, currentValue)
        end
        table.insert(map, mapLine)
    end -- for i = 1, mapDimension
    return map
end

return M